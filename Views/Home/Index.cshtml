@model System.Collections.Concurrent.ConcurrentBag<WebTvs.Models.TvsCheck>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>UDP Data Viewer</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css">
    <style>
        table {
            font-size: 10px;
            line-height: 4px;
            position: relative;
        }

        .slider {
            width: 100vw;
            height: 100vh;
            position: absolute;
            z-index: 100;
            left: 0;
            top: 0;
            display: block; /* Başlangıçta slider görünür */
        }

            .slider img {
                width: 100vw;
                height: 100vh;
            }
    </style>
</head>

<body style="background: rgb(35,35,35);color: var(--bs-white)!important;">
    <!-- Full-screen fade-in slider -->
    <div class="slider" id="fullScreenSlider" style="text-align:center;">
        <img name="slide" alt="">
    </div>

    <section style="width: 100vw;height: 100%;">
        <div class="container-fluid justify-content-center align-items-center justify-content-md-center align-items-md-center" style="padding: 0px;height: 100%;">
            <div class="row" style="margin: 0px;padding: 0px;height: 100%;margin-top: 10px;">
                <div class="col">
                    <div class="table-responsive">
                        <table class="table">
                            <thead style="color: var(--bs-white);background: var(--bs-gray-700);">
                                <tr>
                                    <th style="border-style: solid;">Quantity</th>
                                    <th style="border-style: solid;">Item Name</th>
                                    <th style="border-color: rgb(255,255,255);">TL</th>
                                    <th>USD&nbsp;</th>
                                    <th>EURO&nbsp;</th>
                                    <th>POUND</th>
                                </tr>
                            </thead>
                            <tbody id="dataTableBody" style="color: var(--bs-white);">
                                <!-- Başlangıç verileri varsa bunları listele -->
                                @if (Model.Any())
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.Quantity</td>
                                            <td>@item.ItemName</td>
                                            <td>@item.ItemPrice</td>
                                            <td>3.00</td> <!-- Sabit USD -->
                                            <td>2.00</td> <!-- Sabit EURO -->
                                            <td>1.50</td> <!-- Sabit POUND -->
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <!-- Eğer veriler gelmemişse "Henüz veri yok" satırı gösterilir -->
                                    <tr id="noDataRow">
                                        <td colspan="6">Henüz veri yok.</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot style="border-style: none;">
                                <tr style="border-left-style: none;background: var(--bs-gray-700);">
                                    <td style="font-weight: bold;color: var(--bs-white);border-style: none;border-left-style: none;">TOTAL</td>
                                    <td style="color: var(--bs-white);font-weight: bold;border-style: none;"><br></td>
                                    <td id="totalTL" style="color: var(--bs-white);font-weight: bold;border-style: none;">0.00<br></td>
                                    <td id="totalUSD" style="color: var(--bs-white);font-weight: bold;border-style: none;">0.00<br></td>
                                    <td id="totalEURO" style="color: var(--bs-white);font-weight: bold;border-style: none;">0.00<br></td>
                                    <td id="totalPOUND" style="color: var(--bs-white);font-weight: bold;border-style: none;">0.00<br></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script>

        // Slider resimleri için tam dosya yolu belirliyoruz
        var i = 0;
        var images = [
            '@Url.Content("~/slider/pic1.jpg")',
            '@Url.Content("~/slider/pic2.jpg")',
            '@Url.Content("~/slider/pic3.jpg")'
        ];

        var duration = 3000;

        function slideImg() {
            document.slide.src = images[i];
            if (i < images.length - 1) {
                i++;
            } else {
                i = 0;
            }
            setTimeout(slideImg, duration);
        }

        window.onload = function () {
            slideImg();
        };

        // SignalR Hub bağlantısını kurun
        var connection = new signalR.HubConnectionBuilder().withUrl("/udpDataHub").build();

        // UDP'den veri alındığında tabloyu güncelle
        connection.on("ReceiveUdpData", function (message) {
            var tableBody = document.getElementById("dataTableBody");
            var noDataRow = document.getElementById("noDataRow");
            var fullScreenSlider = document.getElementById("fullScreenSlider");

            // Mesajı '^' ile ayırarak gerekli bilgileri al
            var parts = message.split('^');

            if (parts.length === 9) {
                var quantity = parts[0];
                var itemName = parts[1];
                var itemPrice = parseFloat(parts[2]);  // TL olarak gelen fiyat

                if (quantity === "CLS") {

                    fullScreenSlider.style.display = "none";
                }
                else if (quantity === "IDL" || quantity === "SGN") {

                    fullScreenSlider.style.display = "block";
                }
                // Eğer quantity 'CLS' veya 'SGN' ise tabloyu temizle ve toplamları sıfırla
                if (quantity === "CLS" || quantity === "SGN" || quantity === "FTM") {
                    tableBody.innerHTML = ''; // Tüm satırları temizle

                    // "Henüz veri yok" satırını ekle
                    var row = tableBody.insertRow(0);
                    var cell = row.insertCell(0);
                    cell.colSpan = 6;
                    cell.innerHTML = "Henüz veri yok.";
                    cell.id = "noDataRow";

                    // Toplamları sıfırla
                    resetTotals();

                } else {
                    // Yeni veri için tabloya yeni bir satır ekleyin
                    if (noDataRow) {
                        noDataRow.remove(); // "Henüz veri yok" satırını kaldır
                    }

                    var rowCount = tableBody.rows.length;
                    var row = tableBody.insertRow(rowCount);
                    var cellIndex = row.insertCell(0);
                    var cellData = row.insertCell(1);
                    var cellTL = row.insertCell(2);
                    var cellUSD = row.insertCell(3);
                    var cellEURO = row.insertCell(4);
                    var cellPOUND = row.insertCell(5);

                    // Döviz kurları hesaplama
                    var itemPriceUsd = parseFloat((itemPrice / 33.90).toFixed(2)); // Sabit USD değeri
                    var itemPriceEuro = parseFloat((itemPrice / 37.58).toFixed(2)); // Sabit EURO değeri
                    var itemPricePound = parseFloat((itemPrice / 44.64).toFixed(2)); // Sabit POUND değeri

                    cellIndex.innerHTML = quantity; // Quantity
                    cellData.innerHTML = itemName; // Item Name
                    cellTL.innerHTML = itemPrice.toFixed(2); // UDP'den gelen dinamik TL değeri
                    cellUSD.innerHTML = itemPriceUsd;
                    cellEURO.innerHTML = itemPriceEuro;
                    cellPOUND.innerHTML = itemPricePound;

                    // Toplamları güncelle
                    updateTotals(itemPrice, itemPriceUsd, itemPriceEuro, itemPricePound);


                }
            } else {
                console.error("Veri formatı hatalı");
            }
        });

        // Toplamları güncelleyen fonksiyon
        function updateTotals(newTl, newUsd, newEuro, newPound) {
            totalTL += newTl;
            totalUSD += newUsd;
            totalEURO += newEuro;
            totalPOUND += newPound;

            document.getElementById("totalTL").innerHTML = totalTL.toFixed(2);
            document.getElementById("totalUSD").innerHTML = totalUSD.toFixed(2);
            document.getElementById("totalEURO").innerHTML = totalEURO.toFixed(2);
            document.getElementById("totalPOUND").innerHTML = totalPOUND.toFixed(2);
        }

        // Toplamları sıfırlayan fonksiyon
        function resetTotals() {
            totalTL = 0;
            totalUSD = 0;
            totalEURO = 0;
            totalPOUND = 0;

            document.getElementById("totalTL").innerHTML = totalTL.toFixed(2);
            document.getElementById("totalUSD").innerHTML = totalUSD.toFixed(2);
            document.getElementById("totalEURO").innerHTML = totalEURO.toFixed(2);
            document.getElementById("totalPOUND").innerHTML = totalPOUND.toFixed(2);
        }

        // SignalR bağlantısını başlat
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
</body>

</html>
